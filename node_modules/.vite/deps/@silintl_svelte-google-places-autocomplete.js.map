{
  "version": 3,
  "sources": ["../../@silintl/svelte-google-places-autocomplete/src/loader.js", "../../@silintl/svelte-google-places-autocomplete/src/GooglePlacesAutocomplete.svelte"],
  "sourcesContent": ["let isLoadingLibrary = false\n\n/**\n * The list of callbacks, one from each GooglePlacesAutocomplete instance that requested the library before the library\n * had finished loading.\n */\nconst callbacks = []\n\nfunction hasLoadedLibrary() {\n  return window.google && window.google.maps && window.google.maps.places\n}\n\n/**\n * Load the Google Places library and notify the calling code (if given a callback) once the library is ready.\n *\n * This supports three scenarios:\n * 1. The library hasn't been loaded yet and isn't in the process of loading yet.\n * 2. The library hasn't been loaded yet but is already in the process of loading.\n * 3. The library has already been loaded.\n *\n * In scenarios 1 and 2, any callbacks that have been provided (which could be multiple, if multiple\n * GooglePlacesAutocomplete instances are in use) will be called when the library finishes loading.\n *\n * In scenario 3, the callback will be called immediately.\n *\n * @param apiKey Your Google Places API Key\n * @param callback A callback (if you want to be notified when the library is available for use)\n */\nexport function loadGooglePlacesLibrary(apiKey, callback) {\n  if (hasLoadedLibrary()) {\n    callback()\n    return\n  }\n\n  callback && callbacks.push(callback)\n\n  if (isLoadingLibrary) {\n    return\n  }\n\n  isLoadingLibrary = true\n\n  const element = document.createElement('script')\n  element.async = true\n  element.defer = true\n  element.onload = onLibraryLoaded\n  element.src = `https://maps.googleapis.com/maps/api/js?key=${encodeURIComponent(\n    apiKey\n  )}&libraries=places&callback=Function.prototype`\n  element.type = 'text/javascript'\n\n  document.head.appendChild(element)\n}\n\nfunction onLibraryLoaded() {\n  isLoadingLibrary = false\n  let callback\n  while ((callback = callbacks.pop())) {\n    callback()\n  }\n}\n", null],
  "mappings": "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",
  "names": ["element", "ctx", "value"]
}
